%% rebar plugins
{plugins, [rebar3_hex, rebar3_elixir]}.

%% eunit opts - Maven-like output formatting
{eunit_opts, [verbose, {report, {eunit_surefire, [{dir, "./test/eunit_results"}]}}]}.

%% Test coverage
{cover_enabled, true}.

%% Dialyzer
{dialyzer, [
    {warnings, [error_handling, race_conditions, unknown]},
    {plt_extra_apps, [ctool, ranch]}
]}.

%% deps options
{deps, [
    {ctool, {git, "ssh://git@git.onedata.org:7999/vfs/ctool.git", {ref, "3f66af4e894e"}}}
]}.

%% pre-hooks
{pre_hooks, [
    {eunit, "mkdir -p test/eunit_results"} %% Make dir for eunit' surefire test results
]}.

{post_hooks, [
    {release, "rm -f _build/*/rel/*/bin/install_upgrade.escript"},
    {release, "rm -f _build/*/rel/*/bin/nodetool"},
    {release, "rm -f _build/*/rel/*/bin/cluster_manager-*"},
    {release, "rm -f _build/*/rel/*/bin/start_clean.boot"}
]}.

%% Cleanup
{clean_files, [
    "test/eunit_results"
]}.

%% Erlang options, defines
{erl_opts, [{src_dirs, ["src"]}]}.
%% Add the tuple below to erl_opts proplist to turn on lager parse transform
%% (this is not needed as long as ctool logger is used)
%% {parse_transform, lager_transform}
%% Add the tuple below to erl_opts proplist to completely turn off debug messages
%% {d, skip_debug}

%% relx configuration
{relx, [
    {release, {cluster_manager, "1.0.0"},
        [
            kernel,
            stdlib,
            sasl,
            lager,
            ctool,
            %% deps included by default by reltool but not included by relx
            {base64url, load},
            {common_test, load},
            {debugger, load},
            {edoc, load},
            {enacl, load},
            {erts, load},
            {eunit, load},
            {inets, load},
            {jiffy, load},
            {macaroons, load},
            {meck, load},
            {mnesia, load},
            {observer, load},
            {runtime_tools, load},
            {tools, load},
            {wx, load},
            {xmerl, load},
            cluster_manager
        ]},

    {vm_args, "rel/files/vm.args"},
    {sys_config, "rel/files/app.config"},
    {include_src, false},
    {dev_mode, true},
    % NOTE: {dev_mode, true} expands implicitly to {include_erts, false},
    % so we need this line AFTER the dev mode to override this setting
    {include_erts, true},

    {overlay, [
        %% Copy base files for starting and interacting w/ node
        {copy, "node_package/priv/base/erl", "erts-{{erts_vsn}}/bin/erl"},
        {copy, "node_package/priv/base/nodetool", "erts-{{erts_vsn}}/bin/nodetool"},
        {template, "node_package/priv/base/runner", "bin/cluster_manager"},
        {template, "node_package/priv/base/env.sh", "lib/env.sh"},

        %% Copy config files
        {mkdir, "etc"},
        {copy, "rel/files/config.d", "etc/"},
        {copy, "rel/files/autogenerated.config", "etc/autogenerated.config"},
        {template, "rel/files/vm.args", "etc/vm.args"},

        %% Copy additional data files
        {mkdir, "data"},
        {copy, "LICENSE.txt", "./data/"},
        {template, "rel/files/app.config", "./data/app.config"}
    ]},

    {extended_start_script, true}]}.

%% Profiles configuration
{profiles, [
    {package, [
        {relx, [{dev_mode, false}]}
    ]}
]}.

%% Profiles configuration
{profiles, [
    {package, [
        {relx, [{dev_mode, false}]}
    ]},
    {bamboo, [
        {relx, [{dev_mode, false}]},
        {post_hooks, [
            {release, "rm -rf $REBAR_BUILD_DIR/../default/rel"},
            {release, "mv -f $REBAR_BUILD_DIR/rel $REBAR_BUILD_DIR/../default"},
            {release, "rm -rf $REBAR_BUILD_DIR/../default/lib/cluster_manager"},
            {release, "mv -f $REBAR_BUILD_DIR/lib/cluster_manager $REBAR_BUILD_DIR/../default/lib"}
        ]}
    ]}
]}.
